# Generated by Django 2.1 on 2019-12-11 14:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodigosParos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(blank=True, max_length=50, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=250, null=True)),
                ('opsiguiente', models.BooleanField(blank=True, db_column='OpSiguiente', null=True)),
                ('activo', models.BooleanField(blank=True, db_column='Activo', null=True)),
                ('paros_grupos_fk', models.IntegerField(blank=True, db_column='Paros_Grupos_fk', null=True)),
                ('oee', models.BooleanField(blank=True, db_column='Oee', null=True)),
                ('disponibilidad', models.BooleanField(blank=True, db_column='Disponibilidad', null=True)),
                ('eficiencia', models.BooleanField(blank=True, db_column='Eficiencia', null=True)),
                ('paropreparacionproducto', models.BooleanField(blank=True, db_column='ParoPreparacionProducto', null=True)),
                ('definicionparos', models.TextField(blank=True, db_column='DefinicionParos', null=True)),
            ],
            options={
                'db_table': 'Codigos_Paros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct', models.CharField(blank=True, db_column='CT', max_length=50, null=True, unique=True)),
                ('descripcion', models.CharField(blank=True, db_column='Descripcion', max_length=250, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='Estado', null=True)),
                ('razonparo_fk', models.IntegerField(blank=True, db_column='RazonParo_fk', null=True)),
                ('planta_grupoct_fk', models.IntegerField(blank=True, db_column='Planta_GrupoCT_fk', null=True)),
                ('monitoreado', models.BooleanField(blank=True, db_column='Monitoreado', null=True)),
                ('cc', models.CharField(blank=True, db_column='CC', max_length=50, null=True)),
                ('publicartiemporeal', models.BooleanField(blank=True, db_column='PublicarTiempoReal', null=True)),
                ('activa', models.BooleanField(blank=True, db_column='Activa', null=True)),
                ('costostd', models.FloatField(blank=True, db_column='CostoStd', null=True)),
                ('loteprod_fk', models.IntegerField(blank=True, db_column='LoteProd_fk', null=True)),
                ('maxfechacarga', models.DateField(blank=True, db_column='MaxFechaCarga', null=True)),
                ('factorconversion', models.FloatField(blank=True, db_column='FactorConversion', null=True)),
                ('fcdesdect', models.BooleanField(blank=True, db_column='FCDesdeCT', null=True)),
                ('ultimolote', models.IntegerField(blank=True, db_column='UltimoLote', null=True)),
                ('nroetiquetasimpresionvariable', models.BooleanField(blank=True, db_column='NroEtiquetasImpresionVariable', null=True)),
                ('ordenescontroladasencentrotrabajo', models.IntegerField(blank=True, db_column='OrdenesControladasEnCentroTrabajo', null=True)),
                ('totalenmaquina', models.IntegerField(blank=True, db_column='TotalEnMaquina', null=True)),
                ('detalleparoactual', models.TextField(blank=True, db_column='DetalleParoActual', null=True)),
                ('enmantenimiento', models.BooleanField(blank=True, db_column='EnMantenimiento', null=True)),
            ],
            options={
                'db_table': 'CT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paros',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tiempoparo', models.IntegerField(blank=True, db_column='tiempoParo', null=True)),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('codigoparo_fk', models.IntegerField(blank=True, db_column='codigoParo_fk', null=True)),
                ('job_fk', models.IntegerField(blank=True, null=True)),
                ('ct_fk', models.IntegerField(blank=True, db_column='CT_fk', null=True)),
                ('ciclosparos', models.IntegerField(blank=True, db_column='CiclosParos', null=True)),
                ('turno', models.IntegerField(blank=True, db_column='Turno', null=True)),
                ('fechacalc', models.DateField(blank=True, db_column='FechaCalc', null=True)),
            ],
            options={
                'db_table': 'Paros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_column='usuario', max_length=50, unique=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, db_column='pass', max_length=500, null=True)),
                ('nivelacceso', models.IntegerField(blank=True, db_column='nivelAcceso', null=True)),
                ('activo', models.BooleanField(blank=True, db_column='Activo', null=True)),
                ('nombre', models.CharField(blank=True, db_column='Nombre', max_length=50, null=True)),
                ('correo', models.CharField(blank=True, db_column='Correo', max_length=50, null=True)),
                ('cargo', models.CharField(blank=True, db_column='Cargo', max_length=50, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solucion', models.CharField(blank=True, max_length=100, null=True)),
                ('aperturaTicket', models.DateTimeField(auto_now_add=True, null=True)),
                ('cierreTicket', models.DateTimeField(blank=True, null=True)),
                ('estaCerrado', models.BooleanField(blank=True)),
                ('causa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meridianoTickets.CodigosParos')),
                ('maquinaId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='meridianoTickets.Ct', to_field='ct')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
    ]
